apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cnj-resilience-backend-quarkus.fullname" . }}
  labels:
    {{- include "cnj-resilience-backend-quarkus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.pod.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cnj-resilience-backend-quarkus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.metrics.enabled }}
      {{- if not .Values.metrics.serviceMonitor.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.metrics.path }}
        prometheus.io/port: "8080"
      {{- end }}
      {{- end }}
      labels:
        {{- include "cnj-resilience-backend-quarkus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.pod.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cnj-resilience-backend-quarkus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pod.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.container.main.securityContext | nindent 12 }}
          image: "{{ .Values.container.main.image.repository }}:{{ .Values.container.main.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.main.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.main.ports.http.number }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.container.main.probes.liveness.path }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.container.main.probes.readiness.path }}
              port: http
          resources:
            {{- toYaml .Values.container.main.resources | nindent 12 }}
          env:
            - name: MP_JWT_VERIFY_PUBLICKEY_LOCATION
              value: {{ .Values.security.oidc.jwksUri | quote }}
            - name: MP_JWT_VERIFY_ISSUER
              value: {{ .Values.security.oidc.issuer | quote }}
            - name: CLOUDTRAIN_SERVICES_RECOMMENDATIONS_MP_REST_URL
              value: {{ .Values.cloudtrain.services.recommendations.url }}
            - name: CLOUDTRAIN_SERVICES_WATCHLIST_MP_REST_URL
              value: {{ .Values.cloudtrain.services.watchlist.url }}
            - name: CLOUDTRAIN_COMMON_REST_TRACE_ENABLED
              value: {{ .Values.cloudtrain.common.rest.trace.enabled | quote }}
            - name: QUARKUS_JAEGER_ENABLED
              value: {{ .Values.tracing.enabled | quote }}
            - name: QUARKUS_JAEGER_AGENT_HOST_PORT
              value: "{{ .Values.tracing.jaeger.agent.host }}:{{ .Values.tracing.jaeger.agent.port }}"
            - name: QUARKUS_JAEGER_REPORTER_LOG_SPANS
              value: {{ .Values.tracing.jaeger.logsSpans | quote }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
